<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Jinwoo Park Blog</title><link>https://pmnxis.github.io/posts/</link><description>Recent content in Posts on Jinwoo Park Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>© 2023 Jinwoo Park</copyright><lastBuildDate>Mon, 13 Nov 2023 21:00:00 +0900</lastBuildDate><atom:link href="https://pmnxis.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>러스트 임베디드 양산 제품 개발기 - 4 빌드 스크립트 활용</title><link>https://pmnxis.github.io/posts/my_first_commerical_rust_embedded_product_4/</link><pubDate>Mon, 13 Nov 2023 21:00:00 +0900</pubDate><guid>https://pmnxis.github.io/posts/my_first_commerical_rust_embedded_product_4/</guid><description>WARN! 아직 작성 중인 글입니다. 중도에 내용이 변경될 수 있습니다. 읽기 앞</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://pmnxis.github.io/posts/my_first_commerical_rust_embedded_product_4/feature.jpg"/></item><item><title>러스트 임베디드 양산 제품 개발기 - 3 컴파일 타임에 맡기세요</title><link>https://pmnxis.github.io/posts/my_first_commerical_rust_embedded_product_3/</link><pubDate>Sun, 12 Nov 2023 21:00:00 +0900</pubDate><guid>https://pmnxis.github.io/posts/my_first_commerical_rust_embedded_product_3/</guid><description>WARN! 아직 작성 중인 글입니다. 중도에 내용이 변경될 수 있습니다. 서론 #</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://pmnxis.github.io/posts/my_first_commerical_rust_embedded_product_3/feature.jpg"/></item><item><title>러스트 임베디드 양산 제품 개발기 - 2 기초 공부 방법 및 특징</title><link>https://pmnxis.github.io/posts/my_first_commerical_rust_embedded_product_2/</link><pubDate>Sat, 04 Nov 2023 21:00:00 +0900</pubDate><guid>https://pmnxis.github.io/posts/my_first_commerical_rust_embedded_product_2/</guid><description>WARN! 아직 작성 중인 글입니다. 중도에 내용이 변경될 수 있습니다. RIIR BEAM 서</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://pmnxis.github.io/posts/my_first_commerical_rust_embedded_product_2/feature.jpg"/></item><item><title>러스트 임베디드 양산 제품 개발기 - 1 개발/양산 과정부터 설명</title><link>https://pmnxis.github.io/posts/my_first_commerical_rust_embedded_product_1/</link><pubDate>Thu, 02 Nov 2023 00:49:05 +0900</pubDate><guid>https://pmnxis.github.io/posts/my_first_commerical_rust_embedded_product_1/</guid><description>아직 작성 중인 글입니다. 중도에 내용이 변경 될 수 있습니다. 최근에 현</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://pmnxis.github.io/posts/my_first_commerical_rust_embedded_product_1/feature.JPG"/></item><item><title>ZEN 2/3 의 QC/설계결함으로 인한 간혈적 리셋/멈춤 의혹 제기</title><link>https://pmnxis.github.io/posts/casts_double_amd_desktop_zen_2_and_3_halt_randomly_kr/</link><pubDate>Sat, 08 Apr 2023 21:37:24 +0900</pubDate><guid>https://pmnxis.github.io/posts/casts_double_amd_desktop_zen_2_and_3_halt_randomly_kr/</guid><description>이제 어느정도 ZEN4가 팔린지도 오래되었으며 ZEN3도 stepping? 내부적</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://pmnxis.github.io/posts/casts_double_amd_desktop_zen_2_and_3_halt_randomly_kr/feature.jpeg"/></item><item><title>Discrete Signal Processing Fourier Transform Cheat Note</title><link>https://pmnxis.github.io/posts/discrete_signal_processing_cheat_note/</link><pubDate>Tue, 20 Dec 2022 00:16:01 +0900</pubDate><guid>https://pmnxis.github.io/posts/discrete_signal_processing_cheat_note/</guid><description>1. Fourier series coefficients for Continuous signal # Asking deriving coefficients comes with periodic signal.: \(x(t) \rightarrow a_k\)
1.1 (CT FS) Basic concept of continuous Fourier coefficients # $$ \begin{gathered} x(t): \text { Periodic signal } \ T: \text { Fundamental Period } \ \end{gathered} $$</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://pmnxis.github.io/posts/discrete_signal_processing_cheat_note/features.png"/></item><item><title>Rust를 회사 업무로 쓰고난지 5개월 정도</title><link>https://pmnxis.github.io/posts/five_mothes_ago_from_using_rust_as_work_kr/</link><pubDate>Sun, 27 Nov 2022 01:05:52 +0900</pubDate><guid>https://pmnxis.github.io/posts/five_mothes_ago_from_using_rust_as_work_kr/</guid><description>새로 이직한 회사에서 Rust를 쓰고 있습니다. 이직한지 5개월이 지</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://pmnxis.github.io/posts/five_mothes_ago_from_using_rust_as_work_kr/feature.png"/></item><item><title>Cross compiling aarch64(arm64) rust for linux from x86_64 machine</title><link>https://pmnxis.github.io/posts/cross_compiling_aarch64_rust_for_linux_from_x86_64_linux/</link><pubDate>Tue, 04 Oct 2022 02:09:31 +0900</pubDate><guid>https://pmnxis.github.io/posts/cross_compiling_aarch64_rust_for_linux_from_x86_64_linux/</guid><description>In October 6, Rust for linux is under the linux-next, not stable
Thus this article would be out-of-date before Linux 6.1 stable comes.
Current linux 6.1 rc1 doesn&amp;rsquo;t contain rust for linux with ARM64.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://pmnxis.github.io/posts/cross_compiling_aarch64_rust_for_linux_from_x86_64_linux/feature.png"/></item><item><title>[Rust Driver] Let's try build example rust linux driver.</title><link>https://pmnxis.github.io/posts/look_into_simple_rust_out_of_tree/</link><pubDate>Sun, 02 Oct 2022 21:05:52 +0900</pubDate><guid>https://pmnxis.github.io/posts/look_into_simple_rust_out_of_tree/</guid><description>In October, Rust for linux is under the linux-next, not stable
Thus this article would be out-of-date before Linux 6.1 stable comes.
modules, out-of-tree # There are two main ways to develop kernel modules.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://pmnxis.github.io/posts/look_into_simple_rust_out_of_tree/feature.jpg"/></item><item><title>Rust For Linux Development Environment with AppleSilicon MacOS</title><link>https://pmnxis.github.io/posts/rust_for_linux_with_m1/</link><pubDate>Sat, 01 Oct 2022 00:00:00 +0000</pubDate><guid>https://pmnxis.github.io/posts/rust_for_linux_with_m1/</guid><description>In October 1, Rust for linux is under the linux-next, not stable
Thus this article would be out-of-date before Linux 6.1 stable comes.
This article play with https://github.com/Rust-for-Linux/linux/tree/for-next/rust
Introduction # Currently Apple Silicon mac series is only one ARM workstation that have powerful performance as normal desktop class workstation and can purchase anywhere.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://pmnxis.github.io/posts/rust_for_linux_with_m1/feature.png"/></item><item><title>ARMv8A Memory IP Review</title><link>https://pmnxis.github.io/posts/arm_v8a_memory_ip_review/</link><pubDate>Tue, 14 Dec 2021 00:00:00 +0000</pubDate><guid>https://pmnxis.github.io/posts/arm_v8a_memory_ip_review/</guid><description>Introduction # ARMv8A는 흔히 aarch64로도 불리며 현재 ARMv7</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://pmnxis.github.io/posts/arm_v8a_memory_ip_review/feature.png"/></item></channel></rss>